-----------------------------------------------------------------------------------------------------------------------------
DROP TABLE IF EXISTS accounts;
CREATE TABLE accounts (
    id SERIAL PRIMARY KEY,
    balance NUMERIC NOT NULL
);

INSERT INTO accounts (balance) VALUES (100), (200), (300);

SELECT * FROM accounts
---------------------------------------------------------------------------------------------------------------------------------
НЕПОВТОРЯЮЩЕЕСЯ ЧТЕНИЕ
-- READ REPEATABLE
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;

SELECT balance FROM accounts WHERE id = 1;
DO $$ BEGIN PERFORM pg_sleep(10); END $$;

COMMIT;






BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;

-- Обновляем баланс аккаунта с id = 1
UPDATE accounts SET balance = balance + 50 WHERE id = 1;
SELECT * FROM accounts;
COMMIT;

----------------------------------------------------------------------------------------------------------------------------
ФАНТОМНОЕ ЧТЕНИЕ

--SERIALIZABLE
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;

SELECT COUNT(*) FROM accounts;

DO $$ BEGIN PERFORM pg_sleep(10); END $$;

SELECT COUNT(*) FROM accounts;

COMMIT;









BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;

INSERT INTO accounts (balance) VALUES (400);

COMMIT;
------------------------------------------------------------------------------------------------------------------------------------
--ПОТЕРЯННОЕ ОБНОВЛЕНИЕ
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT balance FROM accounts WHERE id = 1;
UPDATE accounts SET balance = balance + 50 WHERE id = 1;
COMMIT;




BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
UPDATE accounts SET balance = balance + 100 WHERE id = 1;
COMMIT;
------------------------------------------------------------------------------------------------------------------------------------------
--ГРЯЗНОЕ ЧТЕНИЕ
BEGIN;

UPDATE accounts SET balance = balance + 100 WHERE id = 1;

DO $$ BEGIN PERFORM pg_sleep(10); END $$;





BEGIN TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

SELECT balance FROM accounts WHERE id = 1;

COMMIT;


------------------------------------------------------------------------------------------------------------------------------------

Read Uncommitted разрешает доступ к результатам выполнения еще не зафиксированных транзакций и никак не ограничивает выполнения транзакций, тем самым допуская появление любых аномалий;
Read Committed — результаты других транзакций становятся доступными после их фиксации, т. е. запрещается аномалия грязного чтения;
Repeatable Read — повторное выполнение операций поиска и выборки данных
дает такие же результаты, как первое, т. е. запрещаются аномалии грязного и нечеткого чтения;
Serializable требует, чтобы выполнение транзакций было эквивалентно некоторому последовательному выполнению.








BEGIN;


UPDATE accounts SET balance = balance + 100 WHERE id = 1;

SAVEPOINT sp1;

UPDATE accounts SET balance = balance + 100 WHERE id = 1;

UPDATE accounts SET balance = balance + 50 WHERE id = 999;

ROLLBACK TO SAVEPOINT sp1;

UPDATE accounts SET balance = balance - 30 WHERE id = 2;

COMMIT;

SELECT * FROM accounts;
